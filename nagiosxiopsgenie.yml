AWSTemplateFormatVersion: "2010-09-09"
Description: |
  CloudFormation Template for NagiosXI and Nagios log on EC2.
Parameters:
  NagiosUser:
    AllowedPattern: '^[A-Za-z][a-zA-Z0-9@%$_-]{8,41}$'
    ConstraintDescription: must contain only alphanumeric characters.
    Description: The WordPress database admin account password
    MaxLength: '41'
    MinLength: '8'
    Default: 'nagiosadmin'
    Type: String
  NagiosPassword:
    Description: The WordPress database admin account password
    MaxLength: '41'
    MinLength: '8'
    Default: 'nagiosadmin'
    Type: String
  ApiKey:
    Description: The WordPress database admin account password
    MaxLength: '41'
    MinLength: '8'
    Default: 'xxxxxxxxxxxxxxx'
    Type: String
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.small
      - t2.micro
      - m1.small
      - m1.medium
      - m1.large
    ConstraintDescription: must be a valid EC2 instance type.
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName

Mappings:
  RegionImageMap:
    us-east-1:
      AMI: ami-0c94855ba95c71c99
    us-east-2:
      AMI: ami-0603cbe34fd08cb81
    us-west-1:
      AMI: ami-0e65ed16c9bf1abc7
    us-west-2:
      AMI: ami-0841edc20334f9287
    eu-west-1:
      AMI: ami-08a2aed6e0a6f9c7d
Resources:
  NagiosServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: 'Nagios Access Security Group'
      GroupDescription: 'Nagios Access Security Group'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '5666'
          ToPort: '5666'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '5544'
          ToPort: '5544'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: icmp
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: Name
          Value: Server RulesInbound
  
  NagiosHostUbuntuSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: 'Nagios Host Ubuntu Access Security Group'
      GroupDescription: 'Nagios Host Ubuntu  Access Security Group'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '5666'
          ToPort: '5666'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '5544'
          ToPort: '5544'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: icmp
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: Name
          Value: Server RulesInbound

  NagiosServer:
    Type: AWS::EC2::Instance
    Properties:
      Tags:
        - Key: Name
          Value: NagiosXI
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          #config hostname
          hostname nagios
          echo "nagios" >/etc/hostname
          cd /tmp/ 
          wget http://assets.nagios.com/downloads/nagiosxi/xi-latest.tar.gz 
          tar -zxf xi-latest.tar.gz
          cd /tmp/nagiosxi/
          ./fullinstall -n
          chkconfig --add nagios
          chkconfig nagios on
          cd /home/admin
          wget https://github.com/opsgenie/oec-scripts/releases/download/NagiosXI-1.1.4_oec-1.1.3/opsgenie-nagiosxi_1.1.4_amd64.deb
          dpkg -i opsgenie-nagiosxi_1.1.4_amd64.deb
          sed -i "s/<API_KEY>/${ApiKey}/g" /home/opsgenie/oec/conf/config.json
          sed -i "s/nagiosadmin/${NagiosUser}/g" /home/opsgenie/oec/conf/config.json
          sed -i 's/"admin"/"${NagiosPassword}"/g' /home/opsgenie/oec/conf/config.json
      KeyName: !Ref KeyName
      ImageId: ami-07d02ee1eeb0c996c #ami-0001378efdafd5401
      InstanceType: !Ref InstanceType
      SecurityGroupIds:
        - !GetAtt NagiosServerSecurityGroup.GroupId

  NAGIOSSERVERIP:
    Type: AWS::EC2::EIP
  IPAssoc:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref 'NagiosServer'
      EIP: !Ref 'NAGIOSSERVERIP'

  NagiosHostUbuntu:
    Type: AWS::EC2::Instance
    Properties:
      Tags:
        - Key: Name
          Value: nagios-host-ubuntu
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update && apt-get upgrade -y
          apt-get install -y autoconf automake gcc libc6 libmcrypt-dev make libssl-dev wget openssl xinetd zip sysstat
          apt-get install -y bc gawk dc build-essential snmp libnet-snmp-perl gettext
          cd /tmp
          wget --no-check-certificate -O nrpe.tar.gz https://github.com/NagiosEnterprises/nrpe/archive/nrpe-4.0.3.tar.gz
          tar xzf nrpe.tar.gz
          cd /tmp/nrpe-nrpe-4.0.3/
          ./configure --enable-command-args --with-ssl-lib=/usr/lib/x86_64-linux-gnu/
          make all
          make install-groups-users
          make install
          make install-config
          sh -c "echo >> /etc/services"
          sh -c "sudo echo '# Nagios services' >> /etc/services"
          sh -c "sudo echo 'nrpe    5666/tcp' >> /etc/services"
          make install-init
          systemctl enable nrpe.service
          mkdir -p /etc/ufw/applications.d
          sh -c "echo '[NRPE]' > /etc/ufw/applications.d/nagios"
          sh -c "echo 'title=Nagios Remote Plugin Executor' >> /etc/ufw/applications.d/nagios"
          sh -c "echo 'description=Allows remote execution of Nagios plugins' >> /etc/ufw/applications.d/nagios"
          sh -c "echo 'ports=5666/tcp' >> /etc/ufw/applications.d/nagios"
          ufw allow NRPE
          ufw reload
          sed -i '/allowed_hosts=127.0.0.1,::1/s/$/,${NAGIOSSERVERIP}/' /usr/local/nagios/etc/nrpe.cfg
          sed -i 's/^dont_blame_nrpe=.*/dont_blame_nrpe=1/g' /usr/local/nagios/etc/nrpe.cfg
          sed -i '/check_disk/s/^#//g' /usr/local/nagios/etc/nrpe.cfg
          sed -i '/check_swap/s/^#//g' /usr/local/nagios/etc/nrpe.cfg
          sed -i '/check_cpu_stats/s/^#//g' /usr/local/nagios/etc/nrpe.cfg
          sed -i '/check_mem/s/^#//g' /usr/local/nagios/etc/nrpe.cfg
          sed -i '/check_init_service/s/^#//g' /usr/local/nagios/etc/nrpe.cfg
          sed -i '/check_procs/s/^#//g' /usr/local/nagios/etc/nrpe.cfg
          sed -i '/check_apt/s/^#//g' /usr/local/nagios/etc/nrpe.cfg
          sed -i '/check_open_files/s/^#//g' /usr/local/nagios/etc/nrpe.cfg 
      
          cd /tmp
          wget --no-check-certificate -O nagios-plugins.tar.gz https://github.com/nagios-plugins/nagios-plugins/archive/release-2.3.3.tar.gz
          tar zxf nagios-plugins.tar.gz
          cd /tmp/nagios-plugins-release-2.3.3/
          ./tools/setup && ./configure
          make && make install

          cd /tmp
          wget https://github.com/mehmetafsar510/nagios/raw/master/libexec.zip
          unzip libexec.zip
          rm -rf  /usr/local/nagios/libexec
          mv -f libexec /usr/local/nagios/
          chown -v nagios:nagios /usr/local/nagios/libexec/*
          chmod 775 /usr/local/nagios/libexec/*

          /usr/bin/install -c -m  775 -o nagios -g nagios -d /usr/local/nagios/libexec 
          /usr/bin/install -c -m 775 -o nagios -g nagios -d /usr/local/nagios/etc
          chown nagios:nagios /usr/local/nagios/etc/nrpe.cfg
          chmod 644 /usr/local/nagios/etc/nrpe.cfg

          sh -c "echo 'nagios ALL=(ALL) NOPASSWD:/usr/local/nagios/libexec/check_init_service' >> /etc/sudoers"
      
          systemctl start nrpe.service
          systemctl restart xinetd

      KeyName: !Ref KeyName  #netstat -an |grep 5666
      ImageId: ami-0747bdcabd34c712a
      InstanceType: !Ref InstanceType
      SecurityGroupIds:
        - !GetAtt NagiosHostUbuntuSecurityGroup.GroupId
Outputs:
  IPNagiosXI:
    Description: Nagios XI IP
    Value: !Join [ "", [ 'http://',!GetAtt NagiosServer.PublicIp, '/nagiosxi/' ]]

  IPUbuntu:
    Description: Ubuntu IP
    Value: !GetAtt NagiosHostUbuntu.PublicIp